//
// AirlinesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class AirlinesAPI {
    /**
     * enum for parameter sort
     */
    public enum Sort_getAirlines: String, CaseIterable {
        case publicnameASC = "+publicName"
        case publicnameDESC = "-publicName"
    }

    /**
     Get airline
     
     - parameter appId: (header) an authorization header 
     - parameter appKey: (header) an authorization header 
     - parameter resourceVersion: (header) an authorization header 
     - parameter sort: (query) sort 
     - parameter page: (query) Paging (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAirlines(appId: String, appKey: String, resourceVersion: String, sort: Sort_getAirlines, page: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AirlinesList?,_ error: Error?) -> Void)) {
        getAirlinesWithRequestBuilder(appId: appId, appKey: appKey, resourceVersion: resourceVersion, sort: sort, page: page).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get airline
     - GET /airlines
     - parameter appId: (header) an authorization header 
     - parameter appKey: (header) an authorization header 
     - parameter resourceVersion: (header) an authorization header 
     - parameter sort: (query) sort 
     - parameter page: (query) Paging (optional)
     - returns: RequestBuilder<AirlinesList> 
     */
    open class func getAirlinesWithRequestBuilder(appId: String, appKey: String, resourceVersion: String, sort: Sort_getAirlines, page: Int? = nil) -> RequestBuilder<AirlinesList> {
        let path = "/airlines"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "sort": sort.encodeToJSON(), 
            "page": page?.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "Accept": "application/json".encodeToJSON(),
            "app_id": appId.encodeToJSON(),
            "app_key": appKey.encodeToJSON(),
            "ResourceVersion": resourceVersion.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<AirlinesList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
